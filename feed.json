{
    "version": "https://jsonfeed.org/version/1",
    "title": "Digital Dreamers STEAM Academy",
    "description": "",
    "home_page_url": "https://digitaldreamersstemacademy.github.io",
    "feed_url": "https://digitaldreamersstemacademy.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Dipam Acharyya"
    },
    "items": [
        {
            "id": "https://digitaldreamersstemacademy.github.io/intro-to-arduino/",
            "url": "https://digitaldreamersstemacademy.github.io/intro-to-arduino/",
            "title": "I like potatoes",
            "summary": "This course is designed for kids who want to learn how to design and build their own Arduino projects. Arduino is a platform that&hellip;",
            "content_html": "<p><span style=\"font-weight: 400;\">This course is designed for kids who want to learn how to design and build their own Arduino projects. Arduino is a platform that combines hardware and software to create interactive devices that can sense and control the physical world. Arduino is easy to use, fun, and creative.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">In this course, students will learn the basics of Arduino programming and circuit design. students will also learn how to use different sensors and actuators to make their projects more interactive and responsive. students will work on hands-on projects that are fun, creative, and related to some real world attribute.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">The course consists of four modules, each with a different theme and project. The modules are:</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">- </span><strong>Module 1</strong><span style=\"font-weight: 400;\">: Introduction to Arduino. In this module, students will learn how to set up their Arduino board and software, how to write and upload their first program, and how to use LEDs, buttons, and potentiometers. students will also learn about variables, functions, and loops in Arduino programming. The project for this module is a traffic light simulator that changes colors based on a button input.</span></p>\n<p><span style=\"font-weight: 400;\">- </span><strong>Module 2:</strong><span style=\"font-weight: 400;\"> Sensors and Serial Communication. In this module, students will learn how to use different types of sensors, such as light sensors, temperature sensors, ultrasonic sensors, and sound sensors. students will also learn how to send and receive data between their Arduino and their computer using serial communication. The project for this module is a mini weather station that displays temperature, humidity, light level, and sound level on their computer screen.</span></p>\n<p><span style=\"font-weight: 400;\">- </span><strong>Module 3:</strong><span style=\"font-weight: 400;\"> Motors and Servos. In this module, students will learn how to use different types of motors and servos, such as DC motors, stepper motors, servo motors, and vibration motors. students will also learn how to control the speed and direction of their motors using PWM (pulse width modulation) signals. The project for this module is a mini RC airplane that can fly using a joystick controller.</span></p>\n<p><span style=\"font-weight: 400;\">-</span><strong> Module 4:</strong><span style=\"font-weight: 400;\"> LCDs and Bluetooth. In this module, students will learn how to use LCD displays to show text and graphics on their Arduino projects. students will also learn how to use Bluetooth modules to communicate wirelessly between their Arduino and their smartphone. The project for this module is a compact weather station that displays temperature, humidity, pressure, and altitude on an LCD screen and sends the data to their smartphone via Bluetooth.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">By the end of this course, students will have gained the skills and confidence to design and build their own Arduino projects. Students will also have a portfolio of four projects that demonstrate their creativity and problem-solving abilities. This course is a great way to introduce students to the world of electronics, programming, and engineering.</span></p>",
            "image": "https://digitaldreamersstemacademy.github.io/media/posts/3/arduino-course-image-idea.png",
            "author": {
                "name": "Dipam Acharyya"
            },
            "tags": [
            ],
            "date_published": "2023-03-30T23:57:53-07:00",
            "date_modified": "2023-03-31T22:56:15-07:00"
        },
        {
            "id": "https://digitaldreamersstemacademy.github.io/digital-dreamers-steam-academy-2/",
            "url": "https://digitaldreamersstemacademy.github.io/digital-dreamers-steam-academy-2/",
            "title": "Minecraft Education &amp; Coding",
            "summary": "In this course, students will learn how to create their own custom worlds, characters, items, and mechanics using Minecraft Education Edition and Code Builder.",
            "content_html": "<p><span style=\"font-weight: 400;\">In this course, students will learn how to create their own custom worlds, characters, items, and mechanics using Minecraft Education Edition and Code Builder. They will also explore various aspects of game design such as storytelling, level design, user interface, sound effects, and testing.</span></p>\n<p><span style=\"font-weight: 400;\">The course consists of 10 lessons, each lasting about an hour. The lessons are:</span></p>\n<ol>\n<li><span style=\"font-weight: 400;\"> Introduction to Minecraft Education Edition and Code Builder: Students will learn how to access and use the tools and features of Minecraft Education Edition and Code Builder. They will also learn how to create and join multiplayer worlds and collaborate with other students.</span></li>\n<li><span style=\"font-weight: 400;\"> Introduction to coding with MakeCode: Students will learn the basics of coding with MakeCode, a block-based programming language that works with Minecraft. They will learn how to use variables, loops, events, functions, and commands to control their character and the world.</span></li>\n<li><span style=\"font-weight: 400;\"> Creating custom characters: Students will learn how to create their own custom characters using the Character Creator tool. They will also learn how to use code to customize their character's appearance, abilities, and behaviors.</span></li>\n<li><span style=\"font-weight: 400;\"> Creating custom items: Students will learn how to create their own custom items using the Item Editor tool. They will also learn how to use code to give their items special properties and effects.</span></li>\n<li><span style=\"font-weight: 400;\"> Creating custom blocks: Students will learn how to create their own custom blocks using the Block Editor tool. They will also learn how to use code to make their blocks interactive and dynamic.</span></li>\n<li><span style=\"font-weight: 400;\"> Creating custom biomes: Students will learn how to create their own custom biomes using the World Builder tool. They will also learn how to use code to populate their biomes with different types of blocks, plants, animals, and structures.</span></li>\n<li><span style=\"font-weight: 400;\"> Storytelling and narrative design: Students will learn how to use Minecraft as a storytelling platform. They will learn how to use code to create dialogue, cutscenes, quests, and choices for their players. They will also learn how to use signs, books, maps, paintings, and banners to convey information and mood.</span></li>\n<li><span style=\"font-weight: 400;\"> Level design and user experience: Students will learn how to design engaging and challenging levels for their players. They will learn how to use code to create puzzles, traps, obstacles, enemies, and rewards for their players. They will also learn how to use code to create user interface elements such as menus, buttons, health bars, scoreboards, and timers.</span></li>\n<li><span style=\"font-weight: 400;\"> Sound design and music: Students will learn how to use sound and music to enhance their game. They will learn how to use code to play sound effects and music in their game. They will also learn how to use the Note Block Studio tool to create their own custom music tracks.</span></li>\n<li><span style=\"font-weight: 400;\"> Testing and debugging: Students will learn how to test and debug their game. They will learn how to use code to monitor and modify their game variables and events. They will also learn how to use code to detect and fix errors and bugs in their game.</span></li>\n</ol>\n<p> </p>\n<p><span style=\"font-weight: 400;\">The overall approach of this course is to teach kids in STEM by letting them express their creativity and imagination through Minecraft game design. The course aims to foster a positive attitude towards STEM subjects by showing them how fun and rewarding they can be. The course also aims to develop critical thinking, problem-solving, collaboration, communication, and digital literacy skills among the students.</span></p>",
            "image": "https://digitaldreamersstemacademy.github.io/media/posts/2/minecraft-image.jpg",
            "author": {
                "name": "Dipam Acharyya"
            },
            "tags": [
            ],
            "date_published": "2023-03-30T23:57:50-07:00",
            "date_modified": "2023-03-31T01:05:59-07:00"
        },
        {
            "id": "https://digitaldreamersstemacademy.github.io/digital-dreamers-steam-academy/",
            "url": "https://digitaldreamersstemacademy.github.io/digital-dreamers-steam-academy/",
            "title": "Roblox Game Design",
            "summary": "Our Roblox game design course is a fun and engaging way to introduce kids to STEAM concepts and skills. In this course, students will&hellip;",
            "content_html": "<p><span style=\"font-weight: 400;\">Our Roblox game design course is a fun and engaging way to introduce kids to STEAM concepts and skills. In this course, students will learn how to create their own games using Roblox Studio, a powerful and user-friendly game development tool. They will also learn about programming, design, logic, problem-solving, collaboration and more.</span></p>\n<p><span style=\"font-weight: 400;\">The course consists of 10 lessons, each lasting 90 minutes. The lessons are:</span></p>\n<ol>\n<li><span style=\"font-weight: 400;\"> Introduction to Roblox Studio: Students will learn how to navigate the interface, use basic tools and commands, and explore the Roblox library of models and assets.</span></li>\n<li><span style=\"font-weight: 400;\"> Building a 3D World: Students will learn how to create and modify terrain, add objects and materials, and adjust lighting and effects.</span></li>\n<li><span style=\"font-weight: 400;\"> Scripting Basics: Students will learn how to use LUA, a simple and popular programming language, to add interactivity and functionality to their games.</span></li>\n<li><span style=\"font-weight: 400;\"> Variables and Data Types: Students will learn how to store and manipulate data using variables, constants, operators and expressions.</span></li>\n<li><span style=\"font-weight: 400;\"> Control Structures: Students will learn how to use conditional statements, loops and functions to control the flow of their code and create complex behaviors.</span></li>\n<li><span style=\"font-weight: 400;\"> Events and User Input: Students will learn how to use events and user input to trigger actions and responses in their games.</span></li>\n<li><span style=\"font-weight: 400;\"> GUIs and Feedback: Students will learn how to create graphical user interfaces (GUIs) to display information and interact with the players. They will also learn how to use sounds and particles to enhance the feedback and immersion of their games.</span></li>\n<li><span style=\"font-weight: 400;\"> Game Mechanics and Logic: Students will learn how to design and implement core game mechanics and logic, such as scoring, health, inventory, enemies, obstacles and goals.</span></li>\n<li><span style=\"font-weight: 400;\"> Testing and Debugging: Students will learn how to test and debug their games using various tools and techniques, such as print statements, breakpoints, error messages and logs.</span></li>\n<li><span style=\"font-weight: 400;\"> Publishing and Sharing: Students will learn how to publish their games to the Roblox platform and share them with other users. They will also learn how to use the Roblox community features, such as groups, chat and forums.</span></li>\n</ol>\n<p><span style=\"font-weight: 400;\">The overall approach of this course is to provide students with a hands-on and project-based learning experience. Each lesson will have a clear learning objective, a step-by-step tutorial, a challenge activity and a reflection question. Students will work individually or in pairs on their own games, following the instructor's guidance and feedback. By the end of the course, students will have developed several games that showcase their creativity and skills in Roblox game design.</span></p>",
            "image": "https://digitaldreamersstemacademy.github.io/media/posts/1/roblox-image.jpg",
            "author": {
                "name": "Dipam Acharyya"
            },
            "tags": [
            ],
            "date_published": "2023-03-30T23:10:55-07:00",
            "date_modified": "2023-03-31T01:11:14-07:00"
        }
    ]
}
